@LibraryManager_HostAddress = https://localhost:7146
@JwtToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InBvbWF2NzAzMTJAZHdyaXRlcnMuY29tIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiQ2xpZW50IiwiZXhwIjoxNzQxNzI3ODEwLCJpc3MiOiJMaWJyYXJ5TWFuYWdlci5BUEkiLCJhdWQiOiJMaWJyYXJ5TWFuYWdlckFwcCJ9.dQk_esi0F9tjQ6N652pJaSAp-wR0RCOFZtIGZ4wTk4I

### Obter todos os livros
GET {{LibraryManager_HostAddress}}/api/books
Authorization: Bearer {{JwtToken}}
Accept: application/json

### Obter livro por ID
GET {{LibraryManager_HostAddress}}/api/books/1003
Authorization: Bearer {{JwtToken}}
Accept: application/json

### Criar novo livro
POST {{LibraryManager_HostAddress}}/api/books
Authorization: Bearer {{JwtToken}}
Content-Type: application/json
{
  "title": "Teste44410",
  "author": "Teste44401",
  "isbn": "9999999993",
  "publicationYear": 2023
}
 
### Atualizar livro
PUT {{LibraryManager_HostAddress}}/api/books/1005
Authorization: Bearer {{JwtToken}}
Content-Type: application/json

{
  "idBook": 1010,
  "title": "O Senhor dos Anéis2",
  "author": "J.R.R. Tolkien",
  "isbn": "9788533613389",
  "publicationYear": 1956
}

### Deletar livro
DELETE {{LibraryManager_HostAddress}}/api/books/1009
Authorization: Bearer {{JwtToken}}
Accept: application/json


### LOANS:
### Obter Todos LOANS:
GET {{LibraryManager_HostAddress}}/api/loans
Accept: application/json

### Obter por ID
GET {{LibraryManager_HostAddress}}/api/loans/1
Accept: application/json

### Criar novo Loan:
POST {{LibraryManager_HostAddress}}/api/loans
Content-Type: application/json

{
  "userId": 1,
  "bookId": 1006
}

### Marcar devolução do livro:
PUT {{LibraryManager_HostAddress}}/api/loans/5/return
Accept: application/json

### Verificar status do empréstimo:
GET {{LibraryManager_HostAddress}}/api/loans/5/status
Accept: application/json

### Deletar Loan
DELETE {{LibraryManager_HostAddress}}/api/loans/5
Accept: application/json


### USERS:
### Obter todos os usuários
GET {{LibraryManager_HostAddress}}/api/users
Accept: application/json

### Obter usuário por ID
GET {{LibraryManager_HostAddress}}/api/users/1
Accept: application/json

### Criar novo usuário
POST {{LibraryManager_HostAddress}}/api/users
Content-Type: application/json
{
  "name": "geodoido2",
  "email": "pomav70312@dwriters.com",
  "password": "1997240297A@",
  "role": "Client"
}

### Atualizar usuário
PUT {{LibraryManager_HostAddress}}/api/users/7
Content-Type: application/json

{
  "id":7,
  "name": "geoteste",
  "email": "geoteste@mail.com"
}

### Deletar usuário
DELETE {{LibraryManager_HostAddress}}/api/users/6
Accept: application/json

### Login
PUT {{LibraryManager_HostAddress}}/api/users/login
Content-Type: application/json

{
  "email": "pomav70312@dwriters.com",
  "password": "Geovanni10@"
}


### Request Password Recovery
POST {{LibraryManager_HostAddress}}/api/users/password-recovery/request
Content-Type: application/json

{
  "email": "pomav70312@dwriters.com"
}

### Validate Recovery Code
POST {{LibraryManager_HostAddress}}/api/users/password-recovery/validate
Content-Type: application/json

{
  "email": "pomav70312@dwriters.com",
  "code": "423918"
}

### Change Password
POST {{LibraryManager_HostAddress}}/api/users/password-recovery/change
Content-Type: application/json

{
  "email": "pomav70312@dwriters.com",
  "code": "423918",
  "newPassword": "Geovanni10@"
}
