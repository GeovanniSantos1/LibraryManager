@LibraryManager_HostAddress = https://localhost:7146
@JwtToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InBvbWF2NzAzMTIxQGR3cml0ZXJzLmNvbSIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6IkNsaWVudCIsImV4cCI6MTc0MzIwNDE1NiwiaXNzIjoiTGlicmFyeU1hbmFnZXIuQVBJIiwiYXVkIjoiTGlicmFyeU1hbmFnZXJBcHAifQ.yWm6kLyvmzkG_K_vlCUAMSI_8hpDxuLRObw5-MH3_Ro

### Obter todos os livros
GET {{LibraryManager_HostAddress}}/api/books
Authorization: Bearer {{JwtToken}}
Accept: application/json

### Obter livro por ID
GET {{LibraryManager_HostAddress}}/api/books/1
Authorization: Bearer {{JwtToken}}
Accept: application/json

### Criar novo livro
POST {{LibraryManager_HostAddress}}/api/books
Authorization: Bearer {{JwtToken}}
Content-Type: application/json
{
  "title": "Fernando10",
  "author": "Geot",
  "isbn": "9999999988",
  "publicationYear": 2024,
  "ImageFile="C:\Users\Geovanni Santos\Pictures\Screenshots\Captura de tela 2024-10-11 195544.png"
}
 
### Atualizar livro
PUT {{LibraryManager_HostAddress}}/api/books/1005
Authorization: Bearer {{JwtToken}}
Content-Type: application/json

{
  "idBook": 1010,
  "title": "O Senhor dos An�is2",
  "author": "J.R.R. Tolkien",
  "isbn": "9788533613389",
  "publicationYear": 1956
}

### Deletar livro
DELETE {{LibraryManager_HostAddress}}/api/books/1009
Authorization: Bearer {{JwtToken}}
Accept: application/json


### LOANS:
### Obter Todos LOANS:
GET {{LibraryManager_HostAddress}}/api/loans
Accept: application/json

### Obter por ID
GET {{LibraryManager_HostAddress}}/api/loans/1
Accept: application/json

### Criar novo Loan:
POST {{LibraryManager_HostAddress}}/api/loans
Content-Type: application/json

{
  "userId": 6,
  "bookId": 1
}

### Marcar devolu��o do livro:
PUT {{LibraryManager_HostAddress}}/api/loans/5/return
Accept: application/json

### Verificar status do empr�stimo:
GET {{LibraryManager_HostAddress}}/api/loans/5/status
Accept: application/json

### Deletar Loan
DELETE {{LibraryManager_HostAddress}}/api/loans/5
Accept: application/json


### USERS:
### Obter todos os usu�rios
GET {{LibraryManager_HostAddress}}/api/users
Accept: application/json

### Obter usu�rio por ID
GET {{LibraryManager_HostAddress}}/api/users/1
Accept: application/json

### Criar novo usu�rio
POST {{LibraryManager_HostAddress}}/api/users
Content-Type: application/json
{
  "name": "geodoido22",
  "email": "pomav703121@dwriters.com",
  "password": "1997240297A@",
  "role": "Client"
}

### Atualizar usu�rio
PUT {{LibraryManager_HostAddress}}/api/users/7
Content-Type: application/json

{
  "id":7,
  "name": "geoteste",
  "email": "geoteste@mail.com"
}

### Deletar usu�rio
DELETE {{LibraryManager_HostAddress}}/api/users/6
Accept: application/json

### Login
PUT {{LibraryManager_HostAddress}}/api/users/login
Content-Type: application/json

{
  "email": "pomav703121@dwriters.com",
  "password": "1997240297A@"
}


### Request Password Recovery
POST {{LibraryManager_HostAddress}}/api/users/password-recovery/request
Content-Type: application/json

{
  "email": "pomav70312@dwriters.com"
}

### Validate Recovery Code
POST {{LibraryManager_HostAddress}}/api/users/password-recovery/validate
Content-Type: application/json

{
  "email": "pomav70312@dwriters.com",
  "code": "423918"
}

### Change Password
POST {{LibraryManager_HostAddress}}/api/users/password-recovery/change
Content-Type: application/json

{
  "email": "pomav70312@dwriters.com",
  "code": "423918",
  "newPassword": "Geovanni10@"
}

### REVIEWS:
### Criar nova review
POST {{LibraryManager_HostAddress}}/api/reviews
Authorization: Bearer {{JwtToken}}
Content-Type: application/json

{
    "bookId": "2",
    "userId": "1",
    "rating": 5,
    "comment": "Livro bacana 4"
}

### Obter reviews de um livro
GET {{LibraryManager_HostAddress}}/api/reviews/book/2
Authorization: Bearer {{JwtToken}}
Accept: application/json

### Criar review com avaliação inválida (deve falhar)
POST {{LibraryManager_HostAddress}}/api/reviews
Authorization: Bearer {{JwtToken}}
Content-Type: application/json

{
    "bookId": "1003",
    "userId": "6",
    "rating": 6,
    "comment": "Esta review deve falhar pois a avaliação é maior que 5"
}

### Criar review sem autorização (deve falhar)
POST {{LibraryManager_HostAddress}}/api/reviews
Content-Type: application/json

{
    "bookId": "1003",
    "userId": "6",
    "rating": 4,
    "comment": "Esta review deve falhar pois não tem token de autorização"
}
